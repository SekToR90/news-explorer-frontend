[{"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\index.js":"1","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\App\\App.js":"3","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Header\\Header.js":"4","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Navigation\\Navigation.js":"5","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\SearchForm\\SearchForm.js":"6","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Main\\Main.js":"7","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\NewsCardList\\NewsCardList.js":"8","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\NewsCard\\NewsCard.js":"9","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\About\\About.js":"10","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Footer\\Footer.js":"11","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\LoginPopup\\LoginPopup.js":"12","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\PopupWithForm\\PopupWithForm.js":"13","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\RegisterPopup\\RegisterPopup.js":"14","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\InfoTooltip\\InfoTooltip.js":"15","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Preloader\\Preloader.js":"16","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\SavedNewsHeader\\SavedNewsHeader.js":"17","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\SavedNews\\SavedNews.js":"18","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\utils\\NewsApi.js":"19","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\utils\\newsAuth.js":"20","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.js":"21","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\contexts\\CurrentUserContext.js":"22","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\utils\\MainApi.js":"23"},{"size":635,"mtime":1612886249648,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":13059,"mtime":1615981161783,"results":"27","hashOfConfig":"25"},{"size":3676,"mtime":1613480782476,"results":"28","hashOfConfig":"25"},{"size":214,"mtime":1612886249616,"results":"29","hashOfConfig":"25"},{"size":1854,"mtime":1613754732991,"results":"30","hashOfConfig":"25"},{"size":1548,"mtime":1613664259268,"results":"31","hashOfConfig":"25"},{"size":1224,"mtime":1613755586030,"results":"32","hashOfConfig":"25"},{"size":3685,"mtime":1615979521780,"results":"33","hashOfConfig":"25"},{"size":1457,"mtime":1616077449877,"results":"34","hashOfConfig":"25"},{"size":1513,"mtime":1612886249611,"results":"35","hashOfConfig":"25"},{"size":3048,"mtime":1613405314168,"results":"36","hashOfConfig":"25"},{"size":1814,"mtime":1613404536775,"results":"37","hashOfConfig":"25"},{"size":4313,"mtime":1613405228965,"results":"38","hashOfConfig":"25"},{"size":552,"mtime":1612886249613,"results":"39","hashOfConfig":"25"},{"size":245,"mtime":1612886249619,"results":"40","hashOfConfig":"25"},{"size":3627,"mtime":1613827650218,"results":"41","hashOfConfig":"25"},{"size":1152,"mtime":1613829592603,"results":"42","hashOfConfig":"25"},{"size":808,"mtime":1613141875409,"results":"43","hashOfConfig":"25"},{"size":1092,"mtime":1613229239167,"results":"44","hashOfConfig":"25"},{"size":481,"mtime":1613557760655,"results":"45","hashOfConfig":"25"},{"size":87,"mtime":1613479598522,"results":"46","hashOfConfig":"25"},{"size":1536,"mtime":1613645327235,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"4hzpu4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\index.js",[],["100","101"],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\App\\App.js",["102"],"import React from 'react';\nimport { useHistory, Route, Switch, useLocation } from 'react-router-dom';\nimport './App.css';\nimport Header from '../Header/Header';\nimport SearchForm from '../SearchForm/SearchForm';\nimport Main from '../Main/Main';\nimport About from '../About/About';\nimport Footer from '../Footer/Footer';\nimport LoginPopup from '../LoginPopup/LoginPopup';\nimport RegisterPopup from '../RegisterPopup/RegisterPopup';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport SavedNews from '../SavedNews/SavedNews';\nimport * as news from '../../utils/NewsApi';\nimport * as newsAuth from '../../utils/newsAuth';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport MainApi from '../../utils/MainApi';\n\nfunction App() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [isLoginPopupOpen, setIsLoginPopupOpen] = React.useState(false);\n  const [isRegisterPopupOpen, setIsRegisterPopupOpen] = React.useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [isNavigationPopupOpen, setIsNavigationPopupOpen] = React.useState(false);\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({}); // Данные о пользователе\n  const [userExists, setUserExists] = React.useState({});\n  const [newsKeyword, setNewsKeyword] = React.useState(''); //Хранит ключевое слово по которому искали новости\n  const [cards, setCards] = React.useState([]); // Хранит все карточки пользователя\n\n  const [queryIn, setQueryIn] = React.useState(false); //Определяем нажали ли кнопку \"Поиск\"\n  const [isSearchPreloader, setIsSearchPreloader] = React.useState(false); //запускаем прелоудер поиска\n  const [isNotFoundPreloader, setIsNotFoundPreloader] = React.useState(false); //запускаем прелоудер \"ничего не найдено\"\n  const [isNewsCardList, setIsNewsCardList] = React.useState(false); //запускаем отрисовку карточек\n  const [isNewsCards, setIsNewsCards] = React.useState([]); //Стейт с новостными данными\n  const [isServerError, setIsServerError] = React.useState(false);\n\n  //На разрешении 320px удаляем логотип и кнопку из блока Header\n  const [isClickButtonAuthenticate, setIsClickButtonAuthenticate] = React.useState(false);\n\n  function handleButtonAuthenticateClick() {\n    setIsClickButtonAuthenticate(true);\n  }\n  ///////////////////////////////////////////////\n\n  //Блоки регистрации и авторизации\n  const handleRegister = (email, password, name) => {\n    newsAuth\n      .register(email, password, name)\n      .then(() => {\n        resetValidation();\n        closeAllPopup();\n        handleInfoTooltipPopupClick();\n      })\n      .catch(err => {\n        if (err === 'Ошибка: 409') {\n          setUserExists({\n            error: true,\n            text: 'Такой пользователь уже есть',\n          });\n        }\n        console.log(err);\n      });\n  };\n\n  const handleLogin = (email, password) => {\n    newsAuth\n      .authorize(email, password)\n      .then(data => {\n        if (data.token) {\n          console.log(data);\n          localStorage.setItem('jwt', data.token);\n          tokenCheck();\n        }\n      })\n      .catch(err => {\n        if (err.status === 400) {\n          console.log('не передано одно из полей');\n        } else if (err.status === 401) {\n          console.log('пользователь с email не найден');\n        }\n      });\n  };\n\n  //Проверяем, есть ли токен и отрисовываем карточки из локального хранилища\n  React.useEffect(() => {\n    tokenCheck();\n    setNewsKeyword(localStorage.getItem('keyword'));\n    const articles = JSON.parse(localStorage.getItem('articles'));\n    if (articles === null) {\n      return;\n    }\n    setIsNewsCards(\n      articles.map(item => ({\n        link: item.url,\n        date: item.publishedAt,\n        title: item.title,\n        text: item.description,\n        source: item.author,\n        image: item.urlToImage,\n      })),\n    );\n    setQueryIn(true);\n    setIsNewsCardList(true);\n  }, []);\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      newsAuth\n        .getContent(jwt)\n        .then(res => {\n          if (res.email) {\n            setCurrentUser({ userName: res.name, id: res._id });\n            setLoggedIn(true);\n          }\n        })\n        .catch(err => {\n          if (err.status === 401) {\n            console.log(err.statusText);\n          } else {\n            throw err;\n          }\n        });\n    }\n  };\n\n  // Удаляем токен и обнуляем стейты\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setCurrentUser({});\n    setLoggedIn(false);\n  };\n  ////////////////////////////////////////////\n\n  //Функция поиска новостей\n  const handleQueryInClick = keyword => {\n    localStorage.removeItem('keyword');\n    localStorage.removeItem('articles');\n    setQueryIn(true);\n    setIsNewsCardList(false);\n    setIsNotFoundPreloader(false);\n    setIsSearchPreloader(true);\n    news\n      .newsApi(keyword)\n      .then(data => {\n        if (data.articles.length === 0) {\n          return startNotFoundPreloader();\n        }\n        localStorage.setItem('keyword', keyword);\n        setNewsKeyword(keyword);\n        localStorage.setItem('articles', JSON.stringify(data.articles));\n        const articles = JSON.parse(localStorage.getItem('articles'));\n        setIsNewsCards(\n          articles.map(item => ({\n            link: item.url,\n            date: item.publishedAt,\n            title: item.title,\n            text: item.description,\n            source: item.author,\n            image: item.urlToImage,\n          })),\n        );\n        setIsNewsCardList(true);\n        setIsSearchPreloader(false);\n      })\n      .catch(err => {\n        setIsServerError(true);\n      });\n  };\n\n  //Поличаем новости\n  React.useEffect(() => {\n    if (loggedIn) {\n      MainApi.getAllCards()\n        .then(data => {\n          setCards(data);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }, [currentUser, loggedIn]);\n  ///////////////////////////////////\n\n  //Функция сохранения новостей\n  const handleSaveNews = value => {\n    MainApi.postAddNewsCard(value)\n      .then(res => {\n        const newCard = {\n          link: res.link,\n          date: res.date,\n          title: res.title,\n          text: res.text,\n          source: res.source,\n          image: res.image,\n          _id: res._id,\n          keyword: res.keyword,\n        };\n        setCards([newCard, ...cards]);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  //////////////////////////////////////////////\n\n  //Удаляем новостную карточку\n  const handleCardDelete = _id => {\n    MainApi.deleteCards(_id)\n      .then(() => {\n        // Формируем новый массив на основе имеющегося, удаляя из него выбранную карточку\n        const cardsDelete = cards.filter(item => item._id !== _id);\n        setCards(cardsDelete);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  //////////////////////////////////////////////////\n\n  //Удаление сохраненных новостей\n  const deleteArticle = data => {\n    const mySavedArticle = cards.find(item => item.title === data.title && item.text === data.text);\n\n    handleCardDelete(mySavedArticle._id);\n  };\n  /////////////////////////////////////////////////\n\n  //Открываем модалку при вводе в адресную строку \"/saved-news\" для не зарегистрированного пользователя\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (!jwt) {\n      const routerState = history.location.state;\n      if (routerState && routerState.noAuthRedirected && history.action === 'REPLACE') {\n        setIsLoginPopupOpen(true);\n      }\n    }\n  }, []);\n  //////////////////////////////////////////////////////\n\n  // Функция запускает прелоудер \"ничего не найдено\"\n  const startNotFoundPreloader = () => {\n    setIsNewsCardList(false);\n    setIsSearchPreloader(false);\n    setIsNotFoundPreloader(true);\n  };\n  /////////////////////////////////////////////////////\n\n  //Обработчики событий открытия/закрытия модалок\n  const handleLoginPopupClick = () => {\n    setIsLoginPopupOpen(true);\n    setIsNavigationPopupOpen(false);\n    handleButtonAuthenticateClick();\n  };\n\n  const handleRegisterPopupClick = () => {\n    setIsRegisterPopupOpen(true);\n  };\n\n  const handleInfoTooltipPopupClick = () => {\n    setIsInfoTooltipPopupOpen(true);\n  };\n\n  const handleNavigationPopupClick = () => {\n    if (!isNavigationPopupOpen) {\n      return setIsNavigationPopupOpen(true);\n    }\n    setIsNavigationPopupOpen(false);\n  };\n\n  const closeAllPopup = () => {\n    setIsLoginPopupOpen(false);\n    setIsRegisterPopupOpen(false);\n    setIsInfoTooltipPopupOpen(false);\n    setIsClickButtonAuthenticate(false);\n  };\n\n  function keydownEscape(evt) {\n    if (evt.key === 'Escape') {\n      closeAllPopup();\n      window.removeEventListener('keydown', keydownEscape);\n    }\n  }\n\n  const resetValidation = () => {\n    setUserExists({\n      error: false,\n      text: '',\n    });\n  };\n  //\n\n  //функция смены попапов\n  function handleChangePopup() {\n    if (isLoginPopupOpen) {\n      handleButtonAuthenticateClick();\n      handleRegisterPopupClick();\n    } else if (isRegisterPopupOpen) {\n      handleButtonAuthenticateClick();\n      handleLoginPopupClick();\n    } else if (isInfoTooltipPopupOpen) {\n      handleButtonAuthenticateClick();\n      handleLoginPopupClick();\n    }\n  }\n\n  //Закрытие попапов по нажатию на клавишу\n  React.useEffect(() => {\n    window.addEventListener('keydown', keydownEscape);\n  });\n  ////////////////////////////////////////\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        {location.pathname === '/' ? (\n          <Header\n            routePathStart={'/'}\n            routePathNews={'/saved-news'}\n            handleLoginPopupClick={handleLoginPopupClick}\n            loggedIn={loggedIn}\n            handleLogout={handleLogout}\n            handleNavigationPopupClick={handleNavigationPopupClick}\n            isOpen={isNavigationPopupOpen}\n            clickAuthenticate={isClickButtonAuthenticate}\n          />\n        ) : (\n          <Header\n            routePathStart={'/'}\n            routePathNews={'/saved-news'}\n            loggedIn={loggedIn}\n            handleLogout={handleLogout}\n            handleNavigationPopupClick={handleNavigationPopupClick}\n            isOpen={isNavigationPopupOpen}\n          />\n        )}\n\n        <Switch>\n          <Route exact path=\"/\">\n            <SearchForm handleQueryInClick={handleQueryInClick} />\n            {queryIn ? ( // Определяем нажали ли кнопку \"Поиск\"\n              <Main\n                loggedIn={loggedIn}\n                isSearchPreloader={isSearchPreloader}\n                isNotFoundPreloader={isNotFoundPreloader}\n                isNewsCardList={isNewsCardList}\n                isServerError={isServerError}\n                isNewsCards={isNewsCards}\n                newsKeyword={newsKeyword}\n                handleSaveNews={handleSaveNews}\n                deleteArticle={deleteArticle}\n                cards={cards}\n              />\n            ) : null}\n            <About />\n          </Route>\n\n          <ProtectedRoute\n            path=\"/saved-news\"\n            loggedIn={loggedIn}\n            component={SavedNews}\n            handleCardDelete={handleCardDelete}\n            currentUser={currentUser}\n            cards={cards}\n          />\n        </Switch>\n\n        <Footer routePathStart={'/'} />\n\n        <LoginPopup\n          isOpen={isLoginPopupOpen}\n          onClose={closeAllPopup}\n          setLoggedIn={setLoggedIn}\n          handleLogin={handleLogin}\n          openNewPopup={handleChangePopup}\n        />\n\n        <RegisterPopup\n          isOpen={isRegisterPopupOpen}\n          onClose={closeAllPopup}\n          openNewPopup={handleChangePopup}\n          handleRegister={handleRegister}\n          userExists={userExists}\n          resetValidation={resetValidation}\n        />\n\n        <InfoTooltip isOpen={isInfoTooltipPopupOpen} onClose={closeAllPopup} openNewPopup={handleChangePopup} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Header\\Header.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Navigation\\Navigation.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\SearchForm\\SearchForm.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Main\\Main.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\NewsCardList\\NewsCardList.js",["103"],"import React from 'react';\nimport NewsCard from '../NewsCard/NewsCard';\n\nfunction NewsCardList(props) {\n  const [isCardNumber, setIsCardNumber] = React.useState([]);\n\n  //логика отрисовки карточек\n  React.useEffect(() => {\n    setIsCardNumber(props.isNewsCards.slice(0, 3));\n  }, []);\n\n  function handleClick() {\n    setIsCardNumber(props.isNewsCards.slice(0, isCardNumber.length + 3));\n  }\n\n  const endedCardNews = `${isCardNumber >= props.isNewsCards ? 'elements__card-add_none' : ''}`;\n\n  //\n  return (\n    <section className=\"elements\">\n      <h2 className=\"elements__title\">Результаты поиска</h2>\n      <div className=\"cards\">\n        {isCardNumber.map(item => (\n          <NewsCard\n            {...item}\n            loggedIn={props.loggedIn}\n            name=\"main\"\n            newsKeyword={props.newsKeyword}\n            handleSaveNews={props.handleSaveNews}\n            deleteArticle={props.deleteArticle}\n            cards={props.cards}\n          />\n        ))}\n      </div>\n      <button type=\"button\" className={`elements__card-add ${endedCardNews}`} onClick={handleClick}>\n        Показать еще\n      </button>\n    </section>\n  );\n}\n\nexport default NewsCardList;\n","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\NewsCard\\NewsCard.js",["104"],"import React from 'react';\n\nfunction NewsCard(props) {\n  const [saveNewsCard, setSaveNewsCard] = React.useState(false); //проверяем нажата ли кнопка сохранения карточки\n\n  React.useEffect(() => {\n    if (props.name === 'main') {\n      setSaveNewsCard(props.cards.find(item => item.title === props.title && item.text === props.text));\n    }\n  }, [props.cards, props.title]);\n\n  //Ставим активное состояние кнопки сохранения карточки\n  const hideMouseClick = () => {\n    if (saveNewsCard) {\n      return deleteNews();\n    }\n    setSaveNewsCard(true);\n    props.handleSaveNews({\n      keyword: props.newsKeyword,\n      title: props.title,\n      text: props.text,\n      date: props.date,\n      source: props.source,\n      link: props.link,\n      image: props.image,\n    });\n  };\n  //\n\n  function deleteNews() {\n    setSaveNewsCard(false);\n    props.deleteArticle({\n      keyword: props.newsKeyword,\n      title: props.title,\n      text: props.text,\n      date: props.date,\n      source: props.source,\n      link: props.link,\n      image: props.image,\n    });\n  }\n\n  function longDateFormat(data) {\n    const month = [\n      'января',\n      'февраля',\n      'марта',\n      'апреля',\n      'мая',\n      'июня',\n      'июля',\n      'августа',\n      'сентября',\n      'октября',\n      'ноября',\n      'декабря',\n    ];\n    const dateComponent = new Date(data);\n    const newDateComponent = `${dateComponent.getDate()} ${\n      month[dateComponent.getMonth()]\n    }, ${dateComponent.getFullYear()}`;\n    return newDateComponent;\n  }\n\n  function handleDeleteCard(e) {\n    e.preventDefault();\n    props.handleCardDelete(props._id);\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__button-container\">\n        {!props.loggedIn && props.name === 'main' ? (\n          <div className=\"card__delete-container\">\n            <button type=\"button\" className=\"card__button-save\" />\n            <p className=\"card__button-text\">Войдите, чтобы сохранять статьи</p>\n          </div>\n        ) : null}\n\n        {props.loggedIn && props.name === 'main' ? (\n          <button\n            type=\"button\"\n            className={`card__button-save card__button-save_main ${saveNewsCard ? 'card__button-save_active' : ''}`}\n            onClick={hideMouseClick}\n          />\n        ) : null}\n\n        {props.loggedIn && props.name === 'saved-news' ? (\n          <>\n            <div className=\"card__delete-container\">\n              <button type=\"button\" className=\"card__delete-button\" onClick={handleDeleteCard} />\n              <p className=\"card__button-text\">Убрать из сохранённых</p>\n            </div>\n            <p className=\"card__keyword\">{props.keyword}</p>\n          </>\n        ) : null}\n      </div>\n\n      <a className=\"card__link\" href={props.link} target=\"_blank\" rel=\"noreferrer\">\n        <img className=\"card__image\" src={props.image} alt=\"Фотография\" />\n      </a>\n      <div className=\"card__group\">\n        <div className=\"card__group-text\">\n          <p className=\"card__data\">{longDateFormat(props.date)}</p>\n          <a className=\"card__link\" href={props.link} target=\"_blank\" rel=\"noreferrer\">\n            <h2 className=\"card__title\">{props.title}</h2>\n          </a>\n          <p className=\"card__subtitle\">{props.text}</p>\n        </div>\n\n        <a className=\"card__link\" href={props.link} target=\"_blank\" rel=\"noreferrer\">\n          <p className=\"card__author\">{props.source}</p>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default NewsCard;\n","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\About\\About.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\LoginPopup\\LoginPopup.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\PopupWithForm\\PopupWithForm.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\RegisterPopup\\RegisterPopup.js",["105"],"import React from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nfunction RegisterPopup(props) {\n  const [email, setEmail] = React.useState('');\n  const [emailIsValid, setEmailIsValid] = React.useState(false);\n  const [emailErrorMessage, setEmailErrorMessage] = React.useState('');\n\n  const [password, setPassword] = React.useState('');\n  const [passwordIsValid, setPasswordIsValid] = React.useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = React.useState('');\n\n  const [name, setName] = React.useState('');\n  const [nameIsValid, setNameIsValid] = React.useState(false);\n  const [nameErrorMessage, setNameErrorMessage] = React.useState('');\n\n  const errorServerClassButton = `${props.userExists.error ? 'modal__button-save_error' : ''}`; //Поправить на 3 этапе\n\n  function handleEmailChange(evt) {\n    setEmail(evt.target.value);\n    setEmailErrorMessage(evt.target.validationMessage);\n    setEmailIsValid(evt.target.validationMessage ? false : true);\n  }\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n    setNameErrorMessage(evt.target.validationMessage);\n    setNameIsValid(evt.target.validationMessage ? false : true);\n  }\n\n  function handlePasswordChange(evt) {\n    setPassword(evt.target.value);\n    setPasswordErrorMessage(evt.target.validationMessage);\n    setPasswordIsValid(evt.target.validationMessage ? false : true);\n  }\n\n  function resetAllInput() {\n    setEmail('');\n    setPassword('');\n    setName('');\n    setEmailErrorMessage('');\n    setPasswordErrorMessage('');\n    setNameErrorMessage('');\n    setEmailIsValid(false);\n    setPasswordIsValid(false);\n    setNameIsValid(false);\n  }\n\n  React.useEffect(() => {\n    resetAllInput();\n    props.resetValidation();\n  }, [props.isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    resetAllInput();\n    props.handleRegister(email, password, name);\n  }\n\n  return (\n    <PopupWithForm\n      name=\"register\"\n      title=\"Регистрация\"\n      buttonText=\"Зарегистрироваться\"\n      switchModal=\"Войти\"\n      isOpen={props.isOpen ? 'modal_open' : ''}\n      onSubmit={handleSubmit}\n      errorServerClassButton={errorServerClassButton}\n      onClose={props.onClose}\n      openNewPopup={props.openNewPopup}\n      submitIsValid={!emailIsValid || !passwordIsValid || !nameIsValid}\n      children={\n        <>\n          <p className=\"modal-title\">Email</p>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"modal__input modal__input-email\"\n            placeholder=\"Введите почту\"\n            required\n            autoComplete=\"off\"\n            value={email}\n            onChange={handleEmailChange}\n          />\n          <span className={`modal__error ${!emailIsValid ? 'modal__error_visible' : ''}`} id=\"email-error\">\n            {emailErrorMessage}\n          </span>\n\n          <p className=\"modal-title  modal-title-password\">Пароль</p>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"modal__input\"\n            placeholder=\"Введите пароль\"\n            required\n            autoComplete=\"off\"\n            value={password}\n            minLength={8}\n            onChange={handlePasswordChange}\n          />\n          <span className={`modal__error ${!passwordIsValid ? 'modal__error_visible' : ''}`} id=\"urlAvatar-error\">\n            {passwordErrorMessage}\n          </span>\n\n          <p className=\"modal-title  modal-title-name\">Имя</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"modal__input\"\n            placeholder=\"Введите своё имя\"\n            required\n            autoComplete=\"off\"\n            value={name}\n            minLength={2}\n            onChange={handleNameChange}\n          />\n          <span className={`modal__error ${!nameIsValid ? 'modal__error_visible' : ''}`} id=\"urlAvatar-error\">\n            {nameErrorMessage}\n          </span>\n          <span\n            className={`modal__button-error ${props.userExists.error ? 'modal__button-error_visible' : ''}`}\n            id=\"buttonSave-error\"\n          >\n            {props.userExists.text}\n          </span>\n        </>\n      }\n    />\n  );\n}\n\nexport default RegisterPopup;\n","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\InfoTooltip\\InfoTooltip.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\Preloader\\Preloader.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\SavedNewsHeader\\SavedNewsHeader.js",["106"],"import React from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction SavedNewsHeader({ cards }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [firstKeyword, setFirstKeyword] = React.useState('');\n  const [secondKeyword, setSecondKeyword] = React.useState('');\n  const [thirdKeyword, setThirdKeyword] = React.useState('');\n\n  const numberCards = cards.length;\n  const keywordCards = cards.map(item => (item = item.keyword));\n  const keywordsArr = [...new Set(keywordCards)]; //Запоминаем все ключевые не повторяющиеся слова\n\n  const noneKeywords = `${numberCards === 0 ? 'saved-news-header__subtitle_none' : ''}`;\n  const zeroKeywords = `${thirdKeyword === 0 ? 'saved-news-header__subtitle_none' : ''}`;\n  const zeroKeywordsText = `${thirdKeyword === 0 || thirdKeyword === '' ? '' : 'и'}`;\n\n  //Выставляем нужные слова и склонения\n  function declensionWords(data) {\n    if (data === 0) {\n      return 'сохранённых статей';\n    } else if (data === 1) {\n      return 'сохранённая статья';\n    } else if (data >= 2 && data < 5) {\n      return 'сохранённые статьи';\n    } else if (data >= 5) {\n      return 'сохранённых статей';\n    }\n  }\n  //////////////////////////////////////\n\n  function findFreqElem(data) {\n    const store = {};\n\n    data.forEach(item => {\n      store[item] = store[item] ? store[item] + 1 : 1;\n    });\n\n    const entries = Object.entries(store).sort((a, b) => b[1] - a[1]);\n\n    const firstMeaning = entries[0][0];\n    setFirstKeyword(firstMeaning);\n\n    if (entries.length === 1) {\n      return;\n    }\n    const secondMeaning = entries[1][0];\n    setSecondKeyword(secondMeaning);\n\n    const firstResiduaryKeywords = deleteItems(keywordsArr, firstMeaning);\n    const secondResiduaryKeywords = deleteItems(firstResiduaryKeywords, secondMeaning);\n\n    if (secondResiduaryKeywords.length === 1) {\n      setThirdKeyword(entries[2][0]);\n    } else {\n      setThirdKeyword(secondResiduaryKeywords.length);\n    }\n  }\n\n  function deleteItems(data, element) {\n    return data.filter(function (item) {\n      return item !== element;\n    });\n  }\n\n  React.useEffect(() => {\n    if (numberCards !== 0) {\n      findFreqElem(keywordCards);\n    }\n  }, [cards]);\n\n  return (\n    <section className=\"saved-news-header\">\n      <p className=\"saved-news-header__info\">Сохранённые статьи</p>\n      <h2 className=\"saved-news-header__title\">\n        {currentUser.userName}, у вас {numberCards} {declensionWords(numberCards)}\n      </h2>\n      <p className={`saved-news-header__subtitle ${noneKeywords}`}>\n        По ключевым словам:{' '}\n        <span className=\"saved-news-header__subtitle saved-news-header__subtitle_bold\">\n          {keywordsArr.length < 2 ? `${firstKeyword}` : `${firstKeyword}, ${secondKeyword}`}\n        </span>{' '}\n        {keywordsArr.length > 3 ? (\n          <>\n            {' '}\n            {zeroKeywordsText}\n            <span className={`saved-news-header__subtitle ${zeroKeywords} saved-news-header__subtitle_bold`}>\n              {' '}\n              {thirdKeyword} другим\n            </span>\n          </>\n        ) : (\n          <>\n            {' '}\n            {zeroKeywordsText}\n            <span className={`saved-news-header__subtitle ${zeroKeywords} saved-news-header__subtitle_bold`}>\n              {' '}\n              {thirdKeyword}\n            </span>\n          </>\n        )}\n      </p>\n    </section>\n  );\n}\n\nexport default SavedNewsHeader;\n","C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\SavedNews\\SavedNews.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\utils\\NewsApi.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\utils\\newsAuth.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Niks\\dev\\news-explorer-frontend\\src\\utils\\MainApi.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":242,"column":6,"nodeType":"113","endLine":242,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":10,"column":6,"nodeType":"113","endLine":10,"endColumn":8,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":10,"column":6,"nodeType":"113","endLine":10,"endColumn":32,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":52,"column":6,"nodeType":"113","endLine":52,"endColumn":20,"suggestions":"120"},{"ruleId":"111","severity":1,"message":"121","line":70,"column":6,"nodeType":"113","endLine":70,"endColumn":13,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history.action' and 'history.location.state'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook React.useEffect has a missing dependency: 'props.isNewsCards'. Either include it or remove the dependency array. If 'setIsCardNumber' needs the current value of 'props.isNewsCards', you can also switch to useReducer instead of useState and read 'props.isNewsCards' in the reducer.",["126"],"React Hook React.useEffect has missing dependencies: 'props.name' and 'props.text'. Either include them or remove the dependency array. If 'setSaveNewsCard' needs the current value of 'props.text', you can also switch to useReducer instead of useState and read 'props.text' in the reducer.",["127"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["128"],"React Hook React.useEffect has missing dependencies: 'findFreqElem', 'keywordCards', and 'numberCards'. Either include them or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [history.action, history.location.state]",{"range":"140","text":"141"},"Update the dependencies array to be: [props.isNewsCards]",{"range":"142","text":"143"},"Update the dependencies array to be: [props.cards, props.name, props.text, props.title]",{"range":"144","text":"145"},"Update the dependencies array to be: [props, props.isOpen]",{"range":"146","text":"147"},"Update the dependencies array to be: [cards, findFreqElem, keywordCards, numberCards]",{"range":"148","text":"149"},[7743,7745],"[history.action, history.location.state]",[280,282],"[props.isNewsCards]",[345,371],"[props.cards, props.name, props.text, props.title]",[1752,1766],"[props, props.isOpen]",[2219,2226],"[cards, findFreqElem, keywordCards, numberCards]"]